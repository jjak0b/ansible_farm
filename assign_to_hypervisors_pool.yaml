---

- block:
  - name: Fetch virt capabilities
    include_role:
      name: libvirt_utils
      tasks_from: get_capabilities

  - loop: "{{ lookup('ansible.builtin.dict', libvirt_supported_virtualization_types ) }}"
    set_fact:
      hypervisors_pools: { item }
     


  - name: "my test"
    block:
      - name: Init hypervisor pool
        set_fact:
          hypervisors_pools: {}
        when: hostvars[ 'localhost' ].hypervisors_pools is not defined

      - debug:
          msg: "{{ ansible_architecture }} for {{ ansible_hostname }} is {{ hostvars[ 'localhost' ].hypervisors_pools }}"
        
      - name: "Create pool for architecture '{{ ansible_architecture }}' if doesnt exists"
        set_fact:
          hypervisors_pools: "{{ hostvars[ 'localhost' ].hypervisors_pools | combine( { ansible_architecture : [] } ) }}"
        when: not( ansible_architecture in hostvars[ 'localhost' ].hypervisors_pools )

      - debug:
          var: hypervisors_pools
      - debug:
          msg: "{{ hostvars[ 'localhost' ].hypervisors_pools}}"
        
          
      - name: "Add host to its hypervisors_pool of '{{ ansible_architecture }}'"
        set_fact:
          hypervisors_pools: "{{ hostvars[ 'localhost' ].hypervisors_pools | combine( { ansible_architecture: hostvars[ 'localhost' ].hypervisors_pools[ ansible_architecture ] + [ inventory_hostname ] } ) }}"

      - debug:
          msg: "{{ hostvars[ 'localhost' ].hypervisors_pools }}"

    delegate_to: localhost
    delegate_facts: true
