# task.src: URI to fetch
# task.dest: fetched resource name
---

- name: Check local resource
  stat:
    path: &resource_install_path "{{ (vm.metadata.tmp_dir, task.dest) | path_join }}"
    get_checksum: false
  register: cached_resource_stat

- name: check uri type
  set_fact:
    isValidURL: "{{ task.src is defined and task.src is match( '((http|https|ftp):\/\/).*' ) }}"

- name: Fetch URI
  block:
  - name: Check image uri
    uri:
      url: "{{ task.src }}"
      method: HEAD
    register: remote_resource_http_stat
    check_mode: false
    when: task.src is defined and isValidURL
  
  - name: check should update if local resource doesn't exists or cached resource and remote mismatch
    set_fact:
      shouldUpdateImg: "{{not cached_resource_stat.stat.exists or 
                        ( remote_resource_http_stat is succeeded and cached_resource_stat.stat.size != remote_resource_http_stat.content_length )
                      }}"
    
  - name: "Update image {{ task.dest }}"
    get_url:
      url: "{{ task.src }}"
      dest: *resource_install_path
      timeout: 20
    when: task.src is defined and isValidURL and shouldUpdateImg
    register: cached_resource_updated
