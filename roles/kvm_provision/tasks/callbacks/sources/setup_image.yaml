
- name: preparing Image
  vars:
    src_path: "{{ (vm.metadata.tmp_dir, task.src) | path_join }}"
    dest_path: "{{ vm.metadata.tmp_dir }}"
    keys_path: "{{ task.keys_path | default( (vm.metadata.tmp_dir, 'id_ssh_rsa_' +  vm.metadata.name ) | path_join ) }}"
    tmp_kernel_path: "{{ (vm.metadata.tmp_dir, 'tmp-linux-kernel') | path_join }}"
    kernel_filename: vmlinuz-image-{{ ansible_kernel }}
    local_keys_dir: '~/.ssh'
  block:

    - name: Generate an OpenSSH keypair 
      local_action: 
        module: community.crypto.openssh_keypair
        path: "{{ ( local_keys_dir, keys_path | basename ) | path_join }}"
    
    - name: copy public keypair to host
      copy:
        src: "{{ ( local_keys_dir, keys_path | basename ) | path_join }}.pub"
        dest: "{{ keys_path }}.pub"

    # reason for this: https://bugs.launchpad.net/ubuntu/+source/linux/+bug/759725
    - name: "Ubuntu libguestfs Fix"
      when: ansible_distribution == 'Ubuntu'
      vars:
        kernel_path: "{{ (tmp_kernel_path, 'boot', kernel_filename) | path_join }}"
      block:
#        - shell:
#            cmd: chmod 0644 /boot/vmlinuz*
#          become: yes
        - name: Creates tmp directory
          file:
            path: "{{ tmp_kernel_path }}"
            state: directory
        
        - name: Download same kernel version since the host one may be inaccessible
          command:
            cmd: "apt-get download linux-image-{{ ansible_kernel }}"
            creates: "linux-image-{{ ansible_kernel }}*.deb"
            chdir: "{{ tmp_kernel_path }}"

        - name: Extract kernel
          shell:
            cmd: "dpkg-deb -x linux-image-{{ ansible_kernel }}*.deb ./"
            creates: "{{ kernel_path }}"
            chdir: "{{ tmp_kernel_path }}"
        
        - name: Set fact about new kernel
          set_fact:
            supermin_kernel: "{{ kernel_path }}"

    - vars:
        auth_public_key_path: "/opt/{{ keys_path | basename }}.pub"
        script_setup_auth_filepath: "{{ (vm.metadata.tmp_dir, setup_script) | path_join }}"
      block:

        - name: Create temporary file for firstboot auth script
          ansible.builtin.tempfile:
            suffix: "setup_image_auth.sh"
            state: file
          register: _tmp_script_auth_file
        
        - name: Template firstboot script to setup authentication
          ansible.builtin.template:
            src: scripts/setup_image_auth.sh.j2
            dest: "{{ _tmp_script_auth_file.path }}"

        - name: Setup Image
          environment:
            SUPERMIN_KERNEL: "{{ supermin_kernel | default( omit, true) }}"
          shell:
            cmd: >
              virt-sysprep -a '{{ src_path }}'
              --root-password password:{{ vm.metadata.auth.become_password }}
              --hostname '{{ vm.metadata.hostname }}'
              --copy-in {{ keys_path }}.pub:{{ auth_public_key_path | dirname }}
              --chmod 0666:{{ auth_public_key_path }}
              --firstboot {{ _tmp_script_auth_file.path | quote }}
      always: 
        - name: Remove temporary file
          ansible.builtin.file:
            path: "{{ _tmp_script_auth_file.path}}"
            state: absent
          when: _tmp_script_auth_file.path is defined
