- name: Assert vm var is defined
  fail:
    msg: VM definition is not defined
  when: not ( vm is defined )

- name: "Start VM '{{ vm.metadata.name }}'"
  block:
  - name: "Ensure libvirt network is started"
    community.libvirt.virt_net:
      name: "{{ vm.net.source }}"
      state: active
      command: start
      uri: &libvirt_uri "{{ vm.metadata.connection | default(ansible_libvirt_uri, true) | default(omit, true) }}"
    when: vm.net is defined and vm.net.type == 'network'
  
  - import_tasks: startup.yaml
    when: ( "startup" in allowed_phases )
  
  delegate_to: "{{ kvm_host }}"

- name: VM Main lifecycle
  block:
  - name: Wait for defined connection to VM
    wait_for_connection:
      timeout: "{{ connection_timeout | default(120) }}"
    when: ansible_connection is defined and not( wait_until_port_reachable )
    register: connection_wait_result
  
  - name: Wait until VM becomes reachable
    local_action:
      module: wait_for
      host: "{{ ansible_host }}"
      port: "{{ ansible_port | default( 22 ) }}"
      timeout: "{{ connection_timeout | default(120) }}"
    when: connection_wait_result is skipped
    register: connection_wait_result

  - import_tasks: guest_main.yaml
    register: delegate_result

  rescue:
  - name: on wait connection error - report
    debug: 
      var: connection_wait_result
    when: connection_wait_result is failed
  - name: on VM connection error - report
    debug: 
      var: delegate_result
    when: delegate_result is failed
  always:
    - import_tasks: shutdown.yaml
      when: ( "shutdown" in allowed_phases )

  