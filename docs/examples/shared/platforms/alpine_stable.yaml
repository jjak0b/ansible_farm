
# this platform will download always the latest version by fetching releases from remote 
---

- name: defining alpine platform
  vars:
    uri_base: "http://dl-cdn.alpinelinux.org/alpine/latest-stable/releases/{{ vm.arch }}"
  block:
  - block:
      # get last version number
      - name: fetch releases
        uri:
          url: "{{ uri_base }}/latest-releases.yaml"
          return_content: yes
          body_format: raw
        register: version_fetch_result
        
      - name: set latest version
        set_fact:
          alpine_version: "{{ content.version }}"
          sha256: "{{ content.sha256 }}"
        vars:
          content: "{{ version_fetch_result.content | from_yaml | selectattr('flavor', 'equalto', 'alpine-virt') | list | first | to_json | from_json }}"
    rescue:
      - name: set latest version fallback
        set_fact:
          alpine_version: 3.16.1
          sha256: "6c7cb998ec2c8925d5a1239410a4d224b771203f916a18f8015f31169dd767a2"

  - name: Define platform definition
    vars:
      image_name: "alpine-virt-{{ alpine_version }}-{{ vm.arch }}"
    set_fact:
      vm:
        # metadata properties are used inside a task for installation and setup purposes
        metadata:
          template: virtio
          platform_name: alpine_stable
          connection: "qemu:///session"
          auth: 
            user: root
            password: "{{ false | default(omit, true) }}"
            become_user: root
            become_password: alpine
            become_method: sudo
          sources:
            - before_provision:
                - callback: callbacks/sources/fetch.yaml
                  src: "{{ uri_base }}/{{ image_name }}.iso"
                  dest: "{{ image_name }}.iso"
                - callback: callbacks/sources/setup_connection.yaml
                  src: "{{ image_name }}.iso"
              on_provision:
                src: "{{ image_name }}.iso"
                dest: &image_file_name "{{ vm.metadata.platform_name }}_{{ image_name }}"
        disks:
          - type: raw
            devname: "hda"
            src: *image_file_name
        net:
          type: vde
          source: "{{ vde_network }}"
          ip: "10.0.0.21"
          mask: "24"

