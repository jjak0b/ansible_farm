all:
  hosts:
    L0-hypervisor:
      ansible_connection: ssh
      ansible_host: myL0-hypervisor
      ansible_user: user
      ansible_password: &pL0 mypassword
      ansible_become: false
#     ansible_become_method: sudo
#     ansible_become_password: *pL0
      hypervisor_group: user
      config:
        permutations:
          targets:
            - "amd64"
          platforms:
            - "debian_vs"
    VM debian_vs_amd64:
      ansible_host: localhost
      ansible_port: 2201
      ansible_user: user
      ansible_password: &pL1 virtualsquare
      ansible_become_user: root
      ansible_become_password: *pL1
      ansible_become_method: su
    # both alternative require to add ansible_ssh_args: '-F ./ssh.cfg'
      # https://github.com/ansible/ansible/issues/15402
      # This on requires sshpass because we need to jump to the L0 hypervisor and then auth to the L1 VM
      # The L1 VM auth will use the vars defined for L1-hypervisor BUT we can't use password to auth to the first L0-hypervisor (ansible limitation)
      # So we are using sshpass to force using password with first ProxyJump host (L0-hypervisor) and ansible will apply auth credentials to
      ansible_ssh_common_args: >
        -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
        -o ProxyCommand="sshpass -p '{{ hostvars[ hostvars[ 'VM debian_vs_amd64' ].kvm_host ].ansible_password | quote }}' ssh -p {{ hostvars[ hostvars[ 'VM debian_vs_amd64' ].kvm_host ].ansible_port | default(22) }} {{ ansible_ssh_args }} -W %h:%p -q {{ hostvars[ hostvars[ 'VM debian_vs_amd64' ].kvm_host ].ansible_user }}@{{ hostvars[ hostvars[ 'VM debian_vs_amd64' ].kvm_host ].ansible_host }}"
      # Use this one below insted if you are using keys
     # ansible_ssh_common_args: '-J nyL0-hypervisor -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no'
      config:
        permutations:
          targets:
            - "amd64"
          platforms: 
            - "debian_vs_vde"

    VM debian_vs_vde_amd64:
      ansible_host: localhost
      ansible_port: 2201
      # TODO
      ansible_ssh_common_args: >
        -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no
        -o ProxyCommand="sshpass -p '{{ hostvars[ hostvars[ 'VM debian_vs_vde_amd64' ].kvm_host ].ansible_password | quote }}' ssh -p {{ hostvars[ hostvars[ 'VM debian_vs_vde_amd64' ].kvm_host ].ansible_port | default(22) }} {{ ansible_ssh_args }} -W %h:%p -q {{ hostvars[ hostvars[ 'VM debian_vs_vde_amd64' ].kvm_host ].ansible_user }}@{{ hostvars[ hostvars[ 'VM debian_vs_vde_amd64' ].kvm_host ].ansible_host }}
          {{ hostvars[ hostvars[ 'VM debian_vs_vde_amd64' ].kvm_host ].ansible_ssh_common_args }} "
  children:
    hypervisors:
      hosts:
        L0-hypervisor:
  vars:
  # should_replace_vm: yes
    ansible_ssh_args: "-F ./ssh.cfg"
    vde_network: vxvde://234.0.0.1
    

